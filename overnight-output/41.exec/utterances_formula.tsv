theorem whose secondary operator is add and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is add and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_domain) (string =) en.domain.real))
theorem whose domain is numbers and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is cast and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose domain is numbers and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_domain) (string =) en.domain.real))
theorem whose domain is numbers and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose domain is numbers and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is square and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose domain is numbers and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is cast and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose domain is numbers and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose domain is the reals and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose main operator is cast and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_domain) (string =) en.domain.real))
theorem whose main operator is theorem whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc)))
theorem whose secondary operator is add and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose domain is numbers and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose domain is the reals and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is successor and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose main operator is square and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose effect is distribute and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is theorem whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc)))
theorem whose main operator is successor and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is add and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_domain) (string =) en.domain.num))
theorem whose domain is the reals and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is theorem whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add)))
theorem whose secondary operator is square and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is cast and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is square and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_domain) (string =) en.domain.real))
theorem whose domain is the reals and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose domain is numbers and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is power and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose domain is numbers and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is distribute and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose effect is expand and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is successor and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is multiply and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is multiply and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_domain) (string =) en.domain.num))
theorem whose main operator is cast and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is add and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is convert and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is square and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose main operator is theorem whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&)))
theorem whose main operator is cast and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is expand and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose domain is numbers and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose secondary operator is cast and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_domain) (string =) en.domain.real))
theorem whose domain is numbers and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is square and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is successor and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is power and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is add and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.&))
theorem whose domain is the reals and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is cast and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is half and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is theorem whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power)))
theorem whose secondary operator is power and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_domain) (string =) en.domain.real))
theorem whose domain is theorem whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power)))
theorem whose main operator is square and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is square and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is half and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is add and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose domain is theorem whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none)))
theorem whose domain is numbers and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_main_operator) (string =) en.operator.square))
theorem whose domain is theorem whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num)))
theorem whose effect is theorem whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc)))
theorem whose secondary operator is multiply and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_domain) (string =) en.domain.real))
theorem whose main operator is theorem whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute)))
theorem whose effect is zero and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose effect is convert and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is cast and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is divide and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_domain) (string =) en.domain.real))
theorem whose main operator is square and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose main operator is cast and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.add))
theorem whose domain is theorem whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square)))
theorem whose effect is associate and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose main operator is successor and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is square and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is theorem whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num)))
theorem whose main operator is successor and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_domain) (string =) en.domain.num))
theorem whose main operator is square and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is add and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is half and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is power and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is cast and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.zero))
theorem whose secondary operator is add and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.none))
theorem whose secondary operator is successor and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose domain is theorem whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&)))
theorem whose domain is numbers and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_main_operator) (string =) en.operator.add))
theorem whose domain is the reals and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose domain is the reals and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is theorem whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power)))
theorem whose secondary operator is power and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose secondary operator is multiply and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is successor and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is square and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_domain) (string =) en.domain.num))
theorem whose effect is compute and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose main operator is successor and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is cast and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose secondary operator is add and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose secondary operator is cast and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose secondary operator is cast and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is cast and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.compute))
theorem whose domain is numbers and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_main_operator) (string =) en.operator.&))
theorem whose domain is numbers and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is square and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.distribute))
theorem whose domain is theorem whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc)))
theorem whose effect is convert and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is successor and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_domain) (string =) en.domain.real))
theorem whose main operator is cast and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is convert and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_domain) (string =) en.domain.num))
theorem whose main operator is theorem whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power)))
theorem whose domain is numbers and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose domain is the reals and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is divide and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is multiply and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is distribute and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose main operator is cast and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is successor and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose secondary operator is theorem whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify)))
theorem whose domain is numbers and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is distribute and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_domain) (string =) en.domain.real))
theorem whose effect is theorem whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&)))
theorem whose effect is theorem whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num)))
theorem whose domain is theorem whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute)))
theorem whose main operator is successor and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is double and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is divide and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is cast and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is cast and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose domain is numbers and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is divide and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is theorem whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate)))
theorem whose main operator is cast and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose effect is convert and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is distribute and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_domain) (string =) en.domain.num))
theorem whose domain is the reals and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_main_operator) (string =) en.operator.add))
theorem whose main operator is theorem whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc)))
theorem whose domain is numbers and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose main operator is theorem whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num)))
theorem whose secondary operator is add and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is add and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is multiply and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is add and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is add and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is add and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose secondary operator is power and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is theorem whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&)))
theorem whose secondary operator is add and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is convert and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is add and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.square))
theorem whose domain is the reals and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is square and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is distribute and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_main_operator) (string =) en.operator.&))
theorem whose main operator is cast and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is cast and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is cast and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose main operator is square and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose secondary operator is multiply and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose secondary operator is add and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is double and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is square and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is add and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is add and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.square))
theorem whose secondary operator is theorem whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate)))
theorem whose secondary operator is divide and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose secondary operator is half and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is square and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.&))
theorem whose secondary operator is square and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is cast and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.distribute))
theorem whose secondary operator is half and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is power and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose domain is the reals and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose secondary operator is add and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.distribute))
theorem whose domain is numbers and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is zero and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is cast and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.compute))
theorem whose secondary operator is cast and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is half and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose main operator is square and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose secondary operator is add and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose domain is the reals and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.zero))
theorem whose secondary operator is cast and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is square and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose effect is zero and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is add and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is divide and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is power and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is eliminate and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is associate and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose domain is numbers and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is double and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is none and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is successor and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose secondary operator is multiply and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is half and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is square and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is successor and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose secondary operator is divide and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is symmetry and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose domain is numbers and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is add and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is distribute and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_main_operator) (string =) en.operator.square))
theorem whose secondary operator is successor and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is expand and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose secondary operator is successor and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.&))
theorem whose secondary operator is theorem whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert)))
theorem whose effect is distribute and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose effect is theorem whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute)))
theorem whose effect is convert and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_main_operator) (string =) en.operator.&))
theorem whose secondary operator is theorem whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute)))
theorem whose main operator is divide and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is theorem whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none)))
theorem whose domain is numbers and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is convert and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_main_operator) (string =) en.operator.add))
theorem whose domain is numbers and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is none and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is add and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.add))
theorem whose domain is theorem whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add)))
theorem whose effect is double and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_domain) (string =) en.domain.real))
theorem whose main operator is square and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is square and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is theorem whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify)))
theorem whose domain is numbers and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_main_operator) (string =) en.operator.none))
theorem whose main operator is cast and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.expand))
theorem whose main operator is cast and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.simplify))
theorem whose main operator is cast and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.square))
theorem whose secondary operator is cast and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose domain is numbers and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.compute))
theorem whose main operator is successor and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is half and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_domain) (string =) en.domain.real))
theorem whose effect is square and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose main operator is cast and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_domain) (string =) en.domain.num))
theorem whose effect is distribute and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is theorem whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide)))
theorem whose effect is theorem whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square)))
theorem whose secondary operator is square and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is add and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is compute and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_domain) (string =) en.domain.real))
theorem whose domain is the reals and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is compute and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is expand and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is successor and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose domain is theorem whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify)))
theorem whose main operator is add and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose main operator is cast and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose secondary operator is add and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is expand and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_main_operator) (string =) en.operator.square))
theorem whose main operator is add and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_domain) (string =) en.domain.real))
theorem whose main operator is cast and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.introduce))
theorem whose domain is numbers and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.square))
theorem whose secondary operator is add and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is distribute and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is theorem whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry)))
theorem whose secondary operator is add and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.compute))
theorem whose main operator is cast and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is expand and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_domain) (string =) en.domain.real))
theorem whose main operator is square and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is half and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is compute and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose main operator is cast and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is compute and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_domain) (string =) en.domain.num))
theorem whose main operator is none and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose domain is numbers and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.zero))
theorem whose secondary operator is cast and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is convert and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose effect is theorem whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add)))
theorem whose main operator is square and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.none))
theorem whose main operator is theorem whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide)))
theorem whose domain is theorem whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc)))
theorem whose effect is theorem whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half)))
theorem whose secondary operator is multiply and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is cast and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is successor and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.zero))
theorem whose secondary operator is cast and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is square and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.introduce))
theorem whose secondary operator is multiply and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is distribute and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is eliminate and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is divide and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose domain is numbers and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.introduce))
theorem whose domain is the reals and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.distribute))
theorem whose secondary operator is cast and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is square and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is eliminate and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose effect is symmetry and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is square and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is introduce and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is square and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose secondary operator is multiply and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is divide and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_domain) (string =) en.domain.real))
theorem whose effect is theorem whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero)))
theorem whose main operator is theorem whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide)))
theorem whose main operator is cast and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is square and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose domain is the reals and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_main_operator) (string =) en.operator.square))
theorem whose secondary operator is divide and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is expand and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_domain) (string =) en.domain.num))
theorem whose domain is the reals and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose domain is the reals and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose secondary operator is successor and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is introduce and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose effect is associate and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose main operator is square and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is distribute and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_main_operator) (string =) en.operator.add))
theorem whose secondary operator is theorem whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none)))
theorem whose main operator is half and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose main operator is cast and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose secondary operator is power and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is square and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose domain is numbers and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.factorize))
theorem whose secondary operator is square and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose secondary operator is divide and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.square))
theorem whose secondary operator is half and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose secondary operator is successor and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose secondary operator is theorem whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square)))
theorem whose effect is expand and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is cast and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is symmetry and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose domain is theorem whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide)))
theorem whose domain is the reals and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is cast and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is distribute and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is associate and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is cast and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.introduce))
theorem whose domain is theorem whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute)))
theorem whose effect is expand and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is zero and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose domain is numbers and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose domain is theorem whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate)))
theorem whose domain is the reals and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is convert and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is eliminate and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose secondary operator is square and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is successor and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.&))
theorem whose domain is theorem whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add)))
theorem whose main operator is cast and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is simplify and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose main operator is successor and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose secondary operator is theorem whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide)))
theorem whose effect is compute and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is successor and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.zero))
theorem whose secondary operator is cast and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.rotate))
theorem whose domain is numbers and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_main_operator) (string =) en.operator.power))
theorem whose secondary operator is successor and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose secondary operator is half and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose domain is numbers and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.split))
theorem whose secondary operator is square and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is add and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.double))
theorem whose secondary operator is cast and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is eliminate and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is square and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is symmetry and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose domain is the reals and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.split))
theorem whose secondary operator is theorem whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply)))
theorem whose main operator is square and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.compute))
theorem whose domain is the reals and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose secondary operator is half and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose domain is numbers and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.rotate))
theorem whose main operator is successor and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose effect is theorem whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add)))
theorem whose effect is theorem whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc)))
theorem whose secondary operator is successor and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is convert and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose main operator is theorem whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square)))
theorem whose secondary operator is theorem whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half)))
theorem whose effect is distribute and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose effect is distribute and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose secondary operator is divide and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is multiply and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is add and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.half))
theorem whose secondary operator is cast and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is divide and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is multiply and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is simplify and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is square and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_domain) (string =) en.domain.real))
theorem whose main operator is none and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_domain) (string =) en.domain.num))
theorem whose main operator is square and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is zero and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is square and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is zero and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is square and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose secondary operator is square and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.power))
theorem whose domain is numbers and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is expand and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose secondary operator is cast and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is zero and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is convert and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.zero))
theorem whose domain is the reals and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_main_operator) (string =) en.operator.power))
theorem whose secondary operator is square and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is expand and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.distribute))
theorem whose secondary operator is square and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.split))
theorem whose secondary operator is square and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.expand))
theorem whose main operator is square and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose secondary operator is power and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is convert and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is simplify and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is divide and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_domain) (string =) en.domain.num))
theorem whose main operator is divide and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is double and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose domain is the reals and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is theorem whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry)))
theorem whose effect is zero and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is associate and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is add and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is successor and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is square and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is half and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is symmetry and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose domain is theorem whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double)))
theorem whose secondary operator is cast and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is none and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_domain) (string =) en.domain.real))
theorem whose effect is zero and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is split and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is cast and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is eliminate and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is convert and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose effect is zero and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is cast and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is expand and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.zero))
theorem whose secondary operator is power and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is multiply and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is convert and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is successor and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.expand))
theorem whose secondary operator is square and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.compute))
theorem whose secondary operator is square and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose domain is theorem whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize)))
theorem whose main operator is successor and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is eliminate and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is half and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is split and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is square and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is theorem whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc)))
theorem whose main operator is square and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is divide and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is cast and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose main operator is divide and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is half and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is simplify and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is cast and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.none))
theorem whose main operator is none and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose secondary operator is multiply and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is theorem whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half)))
theorem whose secondary operator is cast and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.square))
theorem whose main operator is successor and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is split and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_domain) (string =) en.domain.real))
theorem whose effect is split and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is add and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.expand))
theorem whose secondary operator is multiply and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is expand and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is successor and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose effect is half and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose effect is double and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose domain is the reals and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_main_operator) (string =) en.operator.&))
theorem whose main operator is theorem whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply)))
theorem whose main operator is square and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.power))
theorem whose domain is the reals and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is associate and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is square and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is multiply and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is none and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_domain) (string =) en.domain.num))
theorem whose main operator is add and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_domain) (string =) en.domain.num))
theorem whose effect is convert and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is eliminate and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_domain) (string =) en.domain.num))
theorem whose effect is eliminate and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is distribute and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is eliminate and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is double and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose domain is the reals and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is convert and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_main_operator) (string =) en.operator.square))
theorem whose secondary operator is square and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.half))
theorem whose secondary operator is divide and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.add))
theorem whose main operator is add and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is theorem whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute)))
theorem whose secondary operator is divide and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose secondary operator is divide and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is successor and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is eliminate and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose effect is double and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is square and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose secondary operator is power and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is compute and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is divide and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is distribute and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.zero))
theorem whose main operator is square and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is theorem whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate)))
theorem whose secondary operator is theorem whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&)))
theorem whose secondary operator is successor and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is symmetry and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_domain) (string =) en.domain.num))
theorem whose main operator is divide and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is dissociate and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is half and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is square and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.square))
theorem whose domain is numbers and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose secondary operator is multiply and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.simplify))
theorem whose main operator is square and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is eliminate and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is zero and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is none and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose main operator is half and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is simplify and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is distribute and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is zero and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose main operator is half and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose main operator is power and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is successor and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose domain is theorem whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half)))
theorem whose secondary operator is power and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is expand and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_main_operator) (string =) en.operator.none))
theorem whose domain is theorem whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide)))
theorem whose effect is expand and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is power and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is power and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose secondary operator is half and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is compute and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is multiply and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is square and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is theorem whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply)))
theorem whose secondary operator is square and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.rotate))
theorem whose secondary operator is power and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is successor and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is double and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is add and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.introduce))
theorem whose secondary operator is divide and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is successor and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.square))
theorem whose main operator is power and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is symmetry and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is introduce and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is associate and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is half and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is cast and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is power and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.add))
theorem whose secondary operator is square and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose domain is the reals and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose secondary operator is none and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose effect is simplify and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose main operator is successor and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose secondary operator is add and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is convert and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_main_operator) (string =) en.operator.power))
theorem whose secondary operator is theorem whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half)))
theorem whose effect is expand and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose main operator is square and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is successor and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.add))
theorem whose main operator is square and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.factorize))
theorem whose domain is the reals and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is dissociate and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is add and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.associate))
theorem whose main operator is divide and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.&))
theorem whose main operator is cast and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.split))
theorem whose secondary operator is half and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is multiply and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.&))
theorem whose secondary operator is successor and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.compute))
theorem whose main operator is cast and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is cast and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose domain is the reals and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.double))
theorem whose secondary operator is cast and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.power))
theorem whose main operator is half and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose domain is theorem whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half)))
theorem whose secondary operator is square and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.add))
theorem whose main operator is add and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.distribute))
theorem whose secondary operator is theorem whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute)))
theorem whose main operator is square and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.associate))
theorem whose domain is the reals and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is half and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is double and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is distribute and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose secondary operator is none and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is square and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is expand and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is double and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.compute))
theorem whose secondary operator is theorem whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize)))
theorem whose main operator is successor and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is successor and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.add))
theorem whose main operator is theorem whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry)))
theorem whose main operator is half and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_domain) (string =) en.domain.real))
theorem whose main operator is theorem whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate)))
theorem whose secondary operator is multiply and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is dissociate and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is divide and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is theorem whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half)))
theorem whose effect is theorem whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide)))
theorem whose effect is dissociate and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is split and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is half and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is eliminate and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is split and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose secondary operator is multiply and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.none))
theorem whose secondary operator is multiply and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is dissociate and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is divide and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is theorem whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize)))
theorem whose effect is expand and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is cast and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is none and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is add and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is half and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is multiply and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose secondary operator is half and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.square))
theorem whose secondary operator is power and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose effect is introduce and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is double and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.expand))
theorem whose secondary operator is successor and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is expand and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose secondary operator is power and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is convert and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is distribute and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose secondary operator is successor and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is theorem whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double)))
theorem whose secondary operator is successor and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is split and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is distribute and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is compute and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is power and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.zero))
theorem whose main operator is theorem whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&)))
theorem whose secondary operator is power and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.simplify))
theorem whose main operator is theorem whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add)))
theorem whose secondary operator is square and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose secondary operator is add and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.half))
theorem whose secondary operator is divide and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is power and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is simplify and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_domain) (string =) en.domain.real))
theorem whose secondary operator is successor and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose secondary operator is none and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is none and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is successor and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is none and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.&))
theorem whose main operator is cast and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose secondary operator is cast and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose main operator is theorem whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double)))
theorem whose main operator is add and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is multiply and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.compute))
theorem whose secondary operator is cast and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.simplify))
theorem whose main operator is successor and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is double and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.distribute))
theorem whose domain is theorem whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split)))
theorem whose effect is double and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose secondary operator is multiply and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.rotate))
theorem whose domain is numbers and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is zero and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose main operator is power and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_domain) (string =) en.domain.num))
theorem whose effect is symmetry and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is divide and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is divide and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.power))
theorem whose secondary operator is divide and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.&))
theorem whose secondary operator is theorem whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate)))
theorem whose secondary operator is half and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is convert and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.factorize))
theorem whose secondary operator is add and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose secondary operator is theorem whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide)))
theorem whose effect is associate and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is square and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.associate))
theorem whose main operator is power and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose secondary operator is cast and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is theorem whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute)))
theorem whose secondary operator is power and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.none))
theorem whose main operator is theorem whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none)))
theorem whose secondary operator is successor and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is convert and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is theorem whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add)))
theorem whose effect is associate and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is theorem whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split)))
theorem whose secondary operator is theorem whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half)))
theorem whose domain is the reals and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_main_operator) (string =) en.operator.half))
theorem whose secondary operator is theorem whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double)))
theorem whose effect is distribute and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose domain is the reals and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is distribute and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is factorize and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose domain is theorem whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square)))
theorem whose effect is half and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is introduce and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_domain) (string =) en.domain.real))
theorem whose effect is expand and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is split and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_domain) (string =) en.domain.num))
theorem whose effect is theorem whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert)))
theorem whose effect is theorem whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&)))
theorem whose effect is square and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose secondary operator is power and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is zero and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is power and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is cast and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.factorize))
theorem whose secondary operator is successor and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose domain is theorem whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply)))
theorem whose effect is expand and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is symmetry and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose main operator is cast and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.power))
theorem whose main operator is cast and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is square and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is distribute and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is associate and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is successor and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is introduce and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is convert and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_main_operator) (string =) en.operator.none))
theorem whose main operator is divide and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.introduce))
theorem whose secondary operator is successor and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is compute and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.distribute))
theorem whose secondary operator is half and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is add and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is double and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_main_operator) (string =) en.operator.add))
theorem whose main operator is none and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is square and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose secondary operator is multiply and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is associate and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is cast and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is convert and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose secondary operator is cast and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.square))
theorem whose secondary operator is successor and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is half and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.zero))
theorem whose main operator is multiply and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose secondary operator is power and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose main operator is successor and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.half))
theorem whose secondary operator is half and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is theorem whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero)))
theorem whose effect is eliminate and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is none and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose effect is eliminate and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is simplify and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose effect is associate and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose main operator is multiply and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is divide and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose secondary operator is power and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.power))
theorem whose secondary operator is power and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is half and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is dissociate and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose effect is associate and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_main_operator) (string =) en.operator.&))
theorem whose main operator is successor and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is split and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose secondary operator is theorem whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add)))
theorem whose secondary operator is half and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is convert and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is introduce and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose effect is zero and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is add and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is half and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose secondary operator is cast and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose main operator is successor and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is distribute and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is associate and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.half))
theorem whose secondary operator is half and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.power))
theorem whose main operator is add and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is cast and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.rotate))
theorem whose main operator is theorem whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce)))
theorem whose effect is associate and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.zero))
theorem whose main operator is theorem whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half)))
theorem whose effect is expand and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_main_operator) (string =) en.operator.add))
theorem whose secondary operator is divide and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.split))
theorem whose secondary operator is multiply and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is multiply and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is divide and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is zero and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is associate and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is power and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.distribute))
theorem whose secondary operator is divide and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is convert and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is expand and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.factorize))
theorem whose main operator is square and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.square))
theorem whose secondary operator is divide and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is split and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is dissociate and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is compute and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose secondary operator is divide and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is theorem whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half)))
theorem whose main operator is half and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is successor and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.distribute))
theorem whose secondary operator is half and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is symmetry and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose secondary operator is successor and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.simplify))
theorem whose main operator is divide and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.simplify))
theorem whose main operator is divide and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose secondary operator is divide and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is half and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is associate and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is introduce and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose secondary operator is multiply and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.zero))
theorem whose secondary operator is power and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is none and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose secondary operator is power and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose secondary operator is multiply and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is compute and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_main_operator) (string =) en.operator.none))
theorem whose secondary operator is theorem whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce)))
theorem whose effect is compute and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is expand and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.introduce))
theorem whose secondary operator is multiply and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is successor and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.split))
theorem whose secondary operator is half and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.expand))
theorem whose secondary operator is none and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose secondary operator is none and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is eliminate and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is double and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose domain is theorem whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry)))
theorem whose secondary operator is cast and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is theorem whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half)))
theorem whose effect is half and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.compute))
theorem whose secondary operator is square and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is distribute and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is half and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is dissociate and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_main_operator) (string =) en.operator.none))
theorem whose domain is theorem whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&)))
theorem whose effect is split and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is zero and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.compute))
theorem whose secondary operator is power and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is simplify and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is zero and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is factorize and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_domain) (string =) en.domain.num))
theorem whose secondary operator is successor and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.split))
theorem whose secondary operator is none and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose main operator is add and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.add))
theorem whose secondary operator is add and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is distribute and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.introduce))
theorem whose main operator is divide and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is zero and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is convert and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is expand and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.simplify))
theorem whose domain is the reals and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is theorem whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate)))
theorem whose secondary operator is multiply and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is successor and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.simplify))
theorem whose domain is theorem whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate)))
theorem whose effect is expand and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose secondary operator is multiply and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is square and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is square and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is symmetry and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is eliminate and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is symmetry and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is introduce and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is distribute and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is multiply and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.half))
theorem whose secondary operator is half and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is convert and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.associate))
theorem whose domain is theorem whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert)))
theorem whose effect is distribute and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is double and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is theorem whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split)))
theorem whose main operator is add and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.zero))
theorem whose main operator is none and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.zero))
theorem whose main operator is square and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is square and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.rotate))
theorem whose secondary operator is half and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is successor and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.rotate))
theorem whose secondary operator is multiply and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is divide and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.distribute))
theorem whose secondary operator is half and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is zero and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is double and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is zero and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is associate and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.double))
theorem whose secondary operator is half and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.double))
theorem whose secondary operator is multiply and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is add and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is half and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is divide and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is power and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is zero and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is double and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is compute and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose domain is theorem whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate)))
theorem whose secondary operator is half and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is divide and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is power and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.add))
theorem whose main operator is multiply and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is expand and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is factorize and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is convert and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is introduce and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is eliminate and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is square and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_effect) (string =) en.effect.expand))
theorem whose domain is the reals and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.factorize))
theorem whose main operator is successor and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is half and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is rotate and whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose domain is theorem whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half)))
theorem whose effect is half and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is none and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is split and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is distribute and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.half))
theorem whose secondary operator is multiply and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.half))
theorem whose secondary operator is power and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is introduce and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is eliminate and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_main_operator) (string =) en.operator.none))
theorem whose main operator is power and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is symmetry and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose effect is split and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is associate and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is zero and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_main_operator) (string =) en.operator.add))
theorem whose main operator is add and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is successor and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is half and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is associate and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is double and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is square and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is theorem whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate)))
theorem whose secondary operator is multiply and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is compute and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.compute))
theorem whose secondary operator is main operator of POW_2	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.theorem.POW_2 (string theorem_main_operator))))
theorem whose secondary operator is successor and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is simplify and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose main operator is square and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is associate and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is eliminate and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.expand))
theorem whose domain is the reals and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose secondary operator is none and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.distribute))
theorem whose secondary operator is none and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose domain is the reals and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is symmetry and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is dissociate and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose effect is associate and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is theorem whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify)))
theorem whose effect is simplify and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is half and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose main operator is theorem whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate)))
theorem whose effect is half and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is convert and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.introduce))
theorem whose main operator is theorem whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero)))
theorem whose effect is introduce and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is compute and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is theorem whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate)))
theorem whose effect is rotate and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_domain) (string =) en.domain.real))
theorem whose effect is factorize and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose effect is zero and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is successor and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is none and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose domain is theorem whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate)))
theorem whose effect is theorem whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate)))
theorem whose main operator is none and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose main operator is add and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is distribute and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is distribute and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is expand and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.rotate))
theorem whose secondary operator is successor and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose secondary operator is divide and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is simplify and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is expand and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is associate and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose main operator is divide and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.compute))
theorem whose secondary operator is successor and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose secondary operator is none and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is eliminate and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is power and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.half))
theorem whose main operator is theorem whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square)))
theorem whose effect is compute and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is double and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is eliminate and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is distribute and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is dissociate and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is half and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.simplify))
theorem whose domain is the reals and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is expand and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.associate))
theorem whose main operator is half and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is split and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is divide and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is half and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is power and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is symmetry and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is eliminate and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is convert and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose secondary operator is power and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.introduce))
theorem whose main operator is theorem whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert)))
theorem whose main operator is divide and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is convert and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is symmetry and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is simplify and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is convert and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.expand))
theorem whose main operator is successor and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose main operator is successor and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is symmetry and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is divide and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is double and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is add and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.none))
theorem whose secondary operator is divide and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.expand))
theorem whose main operator is add and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is simplify and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.distribute))
theorem whose secondary operator is none and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is double and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is add and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is multiply and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose main operator is half and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_domain) (string =) en.domain.num))
theorem whose effect is zero and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is multiply and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose main operator is divide and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is factorize and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is square and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is add and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is dissociate and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is double and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is divide and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is compute and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is zero and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_main_operator) (string =) en.operator.square))
theorem whose main operator is half and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is symmetry and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is split and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is divide and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is successor and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is double and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.rotate))
theorem whose secondary operator is power and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.rotate))
theorem whose secondary operator is divide and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.simplify))
theorem whose main operator is multiply and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is multiply and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is eliminate and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is add and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is associate and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose main operator is none and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is multiply and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is none and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.expand))
theorem whose main operator is power and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is expand and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose secondary operator is power and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose secondary operator is half and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is symmetry and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is introduce and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is successor and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose secondary operator is multiply and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is split and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.compute))
theorem whose secondary operator is half and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is simplify and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is expand and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is split and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is introduce and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is eliminate and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_main_operator) (string =) en.operator.add))
theorem whose secondary operator is successor and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is eliminate and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is compute and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is compute and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.factorize))
theorem whose main operator is theorem whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize)))
theorem whose main operator is none and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is symmetry and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.expand))
theorem whose secondary operator is theorem whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply)))
theorem whose secondary operator is divide and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.factorize))
theorem whose secondary operator is successor and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc) (string theorem_main_operator) (string =) en.operator.power))
theorem whose main operator is add and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is zero and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is theorem whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square)))
theorem whose effect is symmetry and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_main_operator) (string =) en.operator.add))
theorem whose secondary operator is none and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is split and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is associate and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is introduce and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is square and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is double and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is associate and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is compute and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is convert and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.rotate))
theorem whose main operator is power and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is square and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose secondary operator is power and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is multiply and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is half and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is eliminate and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.introduce))
theorem whose main operator is add and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is introduce and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is double and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_main_operator) (string =) en.operator.half))
theorem whose main operator is theorem whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split)))
theorem whose effect is zero and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is half and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is factorize and whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_domain) (string =) en.domain.real))
theorem whose effect is dissociate and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is divide and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is convert and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.square))
theorem whose secondary operator is divide and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is rotate and whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose effect is compute and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is multiply and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.&))
theorem whose main operator is power and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is introduce and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is multiply and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is expand and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is introduce and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_main_operator) (string =) en.operator.square))
theorem whose secondary operator is none and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is symmetry and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is dissociate and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is factorize and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is power and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is half and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is associate and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is none and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is dissociate and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose main operator is power and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.square))
theorem whose domain is theorem whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero)))
theorem whose effect is split and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is introduce and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is compute and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is half and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is expand and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is square and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is half and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is zero and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is simplify and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is divide and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is compute and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_main_operator) (string =) en.operator.power))
theorem whose main operator is half and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is none and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is zero and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is square and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is split and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is compute and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is simplify and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is divide and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is half and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.half))
theorem whose secondary operator is multiply and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is eliminate and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is associate and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is associate and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is simplify and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is square and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is double and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is compute and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.expand))
theorem whose secondary operator is half and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.rotate))
theorem whose secondary operator is divide and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is split and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_main_operator) (string =) en.operator.&))
theorem whose main operator is add and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is theorem whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply)))
theorem whose effect is eliminate and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is convert and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is none and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is compute and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_main_operator) (string =) en.operator.add))
theorem whose domain is theorem whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce)))
theorem whose effect is rotate and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose main operator is power and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose secondary operator is none and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is eliminate and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_main_operator) (string =) en.operator.half))
theorem whose main operator is multiply and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is double and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose secondary operator is none and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is symmetry and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is eliminate and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is zero and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is add and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is compute and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is introduce and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is compute and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is half and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is dissociate and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is half and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is dissociate and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is double and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is none and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is expand and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is split and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is half and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is symmetry and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is distribute and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is square and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is square and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is half and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.expand))
theorem whose secondary operator is none and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is eliminate and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is double and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is convert and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_main_operator) (string =) en.operator.half))
theorem whose main operator is divide and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is square and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is distribute and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is square and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is power and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose domain is theorem whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply)))
theorem whose effect is square and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.introduce))
theorem whose main operator is add and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is square and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is theorem whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce)))
theorem whose main operator is power and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose main operator is multiply and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose main operator is divide and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is double and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose secondary operator is power and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is multiply and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is dissociate and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_main_operator) (string =) en.operator.&))
theorem whose main operator is none and whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose effect is rotate and whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_domain) (string =) en.domain.num))
theorem whose effect is distribute and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is dissociate and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is square and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is half and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is split and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is add and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is add and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.introduce))
theorem whose main operator is multiply and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is multiply and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is zero and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is dissociate and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is expand and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is simplify and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_main_operator) (string =) en.operator.square))
theorem whose secondary operator is power and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is square and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is simplify and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.compute))
theorem whose main operator is half and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is none and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is factorize and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.convert))
theorem whose effect is symmetry and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose main operator is none and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is double and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is distribute and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose main operator is add and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is introduce and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is expand and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is associate and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is simplify and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is square and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.half))
theorem whose secondary operator is divide and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is add and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is associate and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is symmetry and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.introduce))
theorem whose main operator is add and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.associate))
theorem whose main operator is none and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.split))
theorem whose secondary operator is divide and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is introduce and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is zero and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.rotate))
theorem whose secondary operator is none and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose main operator is divide and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is square and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is rotate and whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose secondary operator is theorem whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square)))
theorem whose secondary operator is none and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.expand))
theorem whose secondary operator is none and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose main operator is half and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is multiply and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is eliminate and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is double and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.associate))
theorem whose secondary operator is none and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose secondary operator is none and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is eliminate and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is dissociate and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is simplify and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.rotate))
theorem whose main operator is none and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is dissociate and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is square and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is add and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.power))
theorem whose main operator is divide and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is associate and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is compute and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.half))
theorem whose secondary operator is half and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is secondary operator of POW_2	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.theorem.POW_2 (string theorem_sec_operator))))
theorem whose effect is introduce and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is half and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is half and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is symmetry and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is convert and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is square and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose main operator is divide and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.associate))
theorem whose main operator is none and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is none and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.compute))
theorem whose main operator is divide and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is multiply and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.square))
theorem whose main operator is half and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is half and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.introduce))
theorem whose secondary operator is none and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is half and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is symmetry and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is factorize and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is zero and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is introduce and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is simplify and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is simplify and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is introduce and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.split))
theorem whose secondary operator is theorem whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate)))
theorem whose main operator is half and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is square and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_main_operator) (string =) en.operator.square))
theorem whose main operator is half and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is symmetry and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is compute and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is half and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is simplify and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is dissociate and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.compute))
theorem whose main operator is multiply and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is associate and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is dissociate and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is factorize and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is eliminate and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is simplify and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is zero and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_main_operator) (string =) en.operator.half))
theorem whose main operator is divide and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is dissociate and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is none and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.associate))
theorem whose main operator is multiply and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is zero and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is dissociate and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is introduce and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.associate))
theorem whose main operator is half and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is factorize and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is dissociate and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose secondary operator is none and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is eliminate and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is simplify and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is compute and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is split and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is introduce and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is theorem whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate)))
theorem whose main operator is main operator of POW_2	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.theorem.POW_2 (string theorem_main_operator))))
theorem whose secondary operator is none and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is simplify and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is symmetry and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_main_operator) (string =) en.operator.half))
theorem whose secondary operator is half and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is add and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is introduce and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.simplify))
theorem whose main operator is power and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is introduce and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is half and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is simplify and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is symmetry and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is rotate and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is half and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_main_operator) (string =) en.operator.power))
theorem whose main operator is half and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is rotate and whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is introduce and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is factorize and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is half and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is simplify and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.square))
theorem whose secondary operator is none and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is factorize and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is factorize and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is compute and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is introduce and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.expand))
theorem whose secondary operator is none and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is compute and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is power and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is none and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is power and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is double and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is half and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is add and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.square))
theorem whose secondary operator is none and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is symmetry and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is square and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is double and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is dissociate and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is compute and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is none and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is factorize and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is half and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.split))
theorem whose secondary operator is none and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is half and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose effect is split and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is none and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is compute and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is half and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is power and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is divide and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is split and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_main_operator) (string =) en.operator.square))
theorem whose main operator is power and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is dissociate and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.introduce))
theorem whose main operator is none and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is introduce and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is simplify and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose main operator is half and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose main operator is power and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is symmetry and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is split and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is associate and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose main operator is none and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.factorize))
theorem whose secondary operator is secondary operator of POW_2	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.theorem.POW_2 (string theorem_sec_operator))))
theorem whose effect is dissociate and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is eliminate and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose main operator is add and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is simplify and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is split and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is dissociate and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is square and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is double and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose secondary operator is half and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is factorize and whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose main operator is power and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is dissociate and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is introduce and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is rotate and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_main_operator) (string =) en.operator.add))
theorem whose secondary operator is none and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is simplify and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_main_operator) (string =) en.operator.add))
theorem whose main operator is add and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is dissociate and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.zero))
theorem whose main operator is multiply and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is dissociate and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is associate and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is power and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is split and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is compute and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is half and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is factorize and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is multiply and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is simplify and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is factorize and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose effect is split and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose secondary operator is divide and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is symmetry and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_main_operator) (string =) en.operator.power))
theorem whose domain is domain of POW_2	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.theorem.POW_2 (string theorem_domain))))
theorem whose effect is dissociate and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is associate and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose main operator is multiply and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is split and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is divide and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is introduce and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_main_operator) (string =) en.operator.none))
theorem whose secondary operator is none and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.power))
theorem whose main operator is power and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.compute))
theorem whose effect is associate and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is introduce and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is split and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is split and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.factorize))
theorem whose main operator is multiply and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is split and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is none and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.half))
theorem whose secondary operator is none and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is half and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is square and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_main_operator) (string =) en.operator.half))
theorem whose main operator is multiply and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is factorize and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is rotate and whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is zero and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is multiply and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.expand))
theorem whose main operator is half and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.expand))
theorem whose effect is symmetry and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is rotate and whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.convert))
theorem whose main operator is none and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is simplify and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is square and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is split and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is introduce and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is factorize and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is rotate and whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is multiply and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is multiply and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is square and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.rotate))
theorem whose secondary operator is none and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose main operator is multiply and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is simplify and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is half and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is half and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is square and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.factorize))
theorem whose main operator is power and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is power and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is split and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is square and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.zero))
theorem whose main operator is power and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is factorize and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.expand))
theorem whose main operator is power and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is introduce and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce) (string theorem_effect) (string =) en.effect.rotate))
theorem whose main operator is divide and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is factorize and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is symmetry and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_effect) (string =) en.effect.factorize))
theorem whose main operator is theorem whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply)))
theorem whose effect is dissociate and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is power and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is half and whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is half and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.double))
theorem whose main operator is not add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string !=) en.operator.add))
theorem whose secondary operator is none and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is square and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is rotate and whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is factorize and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is square and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.split))
theorem whose main operator is half and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose main operator is half and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is effect of POW_2	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.theorem.POW_2 (string theorem_effect))))
theorem whose effect is simplify and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is rotate and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is split and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is square and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is half and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is rotate and whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose effect is factorize and whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.simplify))
theorem whose effect is rotate and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is dissociate and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is rotate and whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is dissociate and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate) (string theorem_main_operator) (string =) en.operator.half))
theorem whose main operator is power and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.power))
theorem whose secondary operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.suc))
theorem whose effect is half and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is rotate and whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is rotate and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.compute))
theorem whose main operator is multiply and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.introduce))
theorem whose main operator is none and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is rotate and whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.distribute))
theorem whose main operator is half and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is factorize and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is rotate and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is rotate and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.rotate))
theorem whose main operator is power and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is rotate and whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose effect is factorize and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.half))
theorem whose main operator is not divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string !=) en.operator.divide))
theorem whose secondary operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.&))
theorem whose main operator is multiply and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is rotate and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.introduce))
theorem whose effect is factorize and whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.compute))
theorem whose main operator is none and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is rotate and whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is rotate and whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_main_operator) (string =) en.operator.square))
theorem whose effect is symmetry and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose domain is the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.real))
theorem whose main operator is power and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_effect) (string =) en.effect.square))
theorem whose main operator is not square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string !=) en.operator.square))
theorem whose main operator is half and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is factorize and whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.double))
theorem whose effect is rotate and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is factorize and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is rotate and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose secondary operator is not successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string !=) en.operator.suc))
theorem whose main operator is not cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string !=) en.operator.&))
theorem whose effect is rotate and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose secondary operator is not cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string !=) en.operator.&))
theorem whose effect is factorize and whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is not half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.half))
theorem whose effect is factorize and whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.introduce))
theorem whose main operator is multiply and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_effect) (string =) en.effect.rotate))
theorem whose domain is not numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string !=) en.domain.num))
theorem whose main operator is not successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string !=) en.operator.suc))
theorem whose effect is rotate and whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.associate))
theorem whose domain is not the reals	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string !=) en.domain.real))
theorem whose main operator is power and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose secondary operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.square))
theorem whose main operator is multiply and whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply) (string theorem_main_operator) (string =) en.operator.multiply))
theorem whose effect is rotate and whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is factorize and whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is rotate and whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is factorize and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.distribute))
theorem whose effect is rotate and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is not distribute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.distribute))
theorem whose effect is factorize and whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.rotate))
theorem whose effect is rotate and whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.expand))
theorem whose domain is numbers	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_domain) (string =) en.domain.num))
theorem whose effect is rotate and whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is not introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.introduce))
theorem whose effect is factorize and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.square))
theorem whose effect is factorize and whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is factorize and whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is rotate and whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is rotate and whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate) (string theorem_effect) (string =) en.effect.square))
theorem whose secondary operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.power))
theorem whose secondary operator is not square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string !=) en.operator.square))
theorem whose main operator is successor	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.suc))
theorem whose effect is not simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.simplify))
theorem whose secondary operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.add))
theorem whose main operator is not half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string !=) en.operator.half))
theorem whose main operator is not multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string !=) en.operator.multiply))
theorem whose effect is not associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.associate))
theorem whose secondary operator is not none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string !=) en.operator.none))
theorem whose effect is not convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.convert))
theorem whose effect is not eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.eliminate))
theorem whose effect is simplify	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.simplify))
theorem whose secondary operator is not half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string !=) en.operator.half))
theorem whose effect is not rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.rotate))
theorem whose secondary operator is not multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string !=) en.operator.multiply))
theorem whose main operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.divide))
theorem whose effect is compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.compute))
theorem whose secondary operator is not divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string !=) en.operator.divide))
theorem whose secondary operator is divide	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.divide))
theorem whose main operator is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.square))
theorem whose secondary operator is not add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string !=) en.operator.add))
theorem whose secondary operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.half))
theorem whose effect is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.half))
theorem whose effect is not expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.expand))
theorem whose effect is double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.double))
theorem whose secondary operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.none))
theorem whose effect is eliminate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.eliminate))
theorem whose effect is not compute	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.compute))
theorem whose effect is convert	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.convert))
theorem whose secondary operator is not power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string !=) en.operator.power))
theorem whose main operator is not none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string !=) en.operator.none))
theorem whose main operator is not power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string !=) en.operator.power))
theorem whose effect is expand	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.expand))
theorem whose main operator is cast	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.&))
theorem whose effect is not zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.zero))
theorem whose main operator is none	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.none))
theorem whose effect is not square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.square))
theorem whose effect is not factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.factorize))
theorem whose secondary operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_sec_operator) (string =) en.operator.multiply))
theorem whose effect is not symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.symmetry))
theorem whose main operator is add	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.add))
theorem whose effect is not double	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.double))
theorem whose main operator is half	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.half))
theorem whose effect is symmetry	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.symmetry))
theorem whose effect is zero	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.zero))
theorem whose effect is associate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.associate))
theorem whose effect is not dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.dissociate))
theorem whose effect is split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.split))
theorem whose effect is dissociate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.dissociate))
theorem whose effect is not split	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string !=) en.effect.split))
theorem whose effect is factorize	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.factorize))
theorem whose effect is rotate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.rotate))
theorem whose main operator is power	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.power))
theorem whose effect is introduce	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.introduce))
main operator of POW_2	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.theorem.POW_2 (string theorem_main_operator)))
theorem whose effect is square	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_effect) (string =) en.effect.square))
secondary operator of POW_2	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.theorem.POW_2 (string theorem_sec_operator)))
domain of POW_2	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.theorem.POW_2 (string theorem_domain)))
theorem whose main operator is multiply	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.theorem) (string !type)) (string theorem_main_operator) (string =) en.operator.multiply))
effect of POW_2	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.theorem.POW_2 (string theorem_effect)))
